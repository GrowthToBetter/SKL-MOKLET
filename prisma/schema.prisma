generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid()) @map("user_id") @db.Char(36)
  email         String        @unique
  photo_profile String?
  name          String
  clasess       String?
  absent        String?
  Phone         String?
  NIS           String?
  NISN          String?
  schoolOrigin  String?
  role          Role          @default(SISWA)
  status        Status  @default(NOTGRADUATE)
  whatsapp      String?
  BirthDate     String?
  religion      Religion?     @default(Islam)
  gender        Gender?       @default(Male)
  userAuth      UserAuth?
  teacherId     String?
  TaskUser      Task[]     
  Sugestion     String?
  Teacher       User?     @relation("teacherToStudent", fields: [teacherId], references: [id])
  Student User[] @relation("teacherToStudent")
}

model UserAuth {
  id         String    @id @default(uuid()) @map("userauth_id") @db.Char(36)
  password   String?
  last_login DateTime?
  userEmail  String    @unique
  user       User      @relation(fields: [userEmail], references: [email], onDelete: Cascade)
}

model Task{
  id          String          @id @default(uuid()) @map("task_id") @db.Char(36)
  Task  String?
  user User[] 
  userAuthTask    Boolean       @default(false)     
  teacherAuth Boolean       @default(false)
  status      RequestStatus   @default(PENDING)
}

enum Status {
  NOTGRADUATE
  GRADUATE
}

enum Role {
  SISWA
  GURU
  ADMIN
}

enum Gender {
  Male
  Female
}

enum Religion {
  Islam
  Kristen_Protestan
  Kristen_Katolik
  Budha
  Hindu
  Konghucu
}

enum RequestStatus {
  PENDING
  VERIFIED
  DENIED
}
